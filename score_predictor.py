# -*- coding: utf-8 -*-
"""score_predictor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_wlIOHF9GHRyCQ6bvE4fUZrsgnWBS-N2
"""



import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# 1. Create (or load) dataset
# Here we generate synthetic data for simplicity
np.random.seed(0)
data = {'Hours': np.random.rand(100) * 10, 'Scores': np.random.rand(100) * 100}
df = pd.DataFrame(data)

# 2. Visualize
plt.scatter(df['Hours'], df['Scores'], color='blue')
plt.xlabel('Hours Studied')
plt.ylabel('Score')
plt.title('Study Hours vs Exam Score')
plt.show()

# 3. Prepare data
X = df[['Hours']]
y = df['Scores']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 4. Train model
model = LinearRegression()
model.fit(X_train, y_train)

# 5. Predict & Evaluate
y_pred = model.predict(X_test)
print("MSE:", mean_squared_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))

# 6. Plot regression line
plt.scatter(X_train, y_train, color='green', label='Training data')
plt.plot(X_train, model.predict(X_train), color='red', label='Regression Line')
plt.xlabel('Hours Studied')
plt.ylabel('Score')
plt.title('Linear Regression Fit')
plt.legend()
plt.show()